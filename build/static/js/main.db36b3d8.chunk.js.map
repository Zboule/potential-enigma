{"version":3,"sources":["lib/SearchBox/SearchBox.component.tsx","lib/PhotoGallery/PhotoGallery.component.tsx","lib/Photo/Photo.component.tsx","lib/FlickrPhoto/FlickrPhoto.component.tsx","lib/Loader/Loader.component.tsx","lib/FlickrSearch/FlickrSearch.component.tsx","lib/FullScreenContent/FullScreenContent.component.tsx","lib/OpenCVEffect/OpenCVEffect.component.tsx","App.tsx","index.tsx"],"names":["SearchBox","state","value","onChange","event","setState","target","onClick","props","onSearch","className","id","placeholder","this","endAdornment","position","aria-label","edge","React","PhotoGallery","handleScroll","e","element","scrollHeight","scrollTop","clientHeight","onScrollEnd","onScroll","undefined","children","Photo","crossOrigin","src","url","alt","onLoad","title","FlickrPhoto","farm","server","secret","divId","MyLoader","type","color","height","width","FlickrSearch","lastLoadedPage","searchValue","photos","isLoading","handleClickPhoto","photoInfo","onClickPhoto","handleSearchChange","a","console","log","getNextPage","handleScrollEnd","defaultSearch","length","map","photo","key","getPhotos","searchResult","newPhotos","page","search","params","fetch","join","response","json","asJson","FullScreenContent","onClose","fontSize","OpenCVEffect","applyTransform","cv","window","imread","dst","Mat","cvtColor","COLOR_RGB2GRAY","Canny","imshow","delete","App","fullScreenPhoto","image","Fragment","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db36b3d8.chunk.js","sourcesContent":["import * as React from 'react'\nimport './SearchBox.component.scss'\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport Input from '@material-ui/core/Input/Input';\nimport SearchIcon from '@material-ui/icons/Search';\n\ninterface IState {\n    value: string\n}\n\ninterface IProps {\n    onSearch: (value: string) => void\n\n}\n\nexport class SearchBox extends React.Component<IProps, IState> {\n\n    state = {\n        value: \"\"\n    }\n\n    private onChange = (event: any) => {\n        this.setState({ value: event.target.value })\n    }\n\n    private onClick = () => {\n        this.props.onSearch(this.state.value)\n    }\n\n    public render(): JSX.Element {\n        return (\n\n            <Input\n                className=\"search-input\"\n                id=\"outlined-size-normal\"\n                placeholder=\"search\"\n                onChange={this.onChange}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={this.onClick}\n                            edge=\"end\"\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    </InputAdornment>\n                }\n            />\n\n\n\n\n\n        )\n    }\n}\n","import * as React from 'react'\nimport './PhotoGallery.component.scss'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\ninterface IState {\n}\n\ninterface IProps {\n    onScrollEnd?: () => void\n}\n\nexport class PhotoGallery extends React.Component<IProps, IState> {\n\n    handleScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        let element = e.target as HTMLDivElement\n        if (element.scrollHeight - element.scrollTop <= element.clientHeight + 1) {\n            this.props.onScrollEnd!()\n        }\n    }\n\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"photo-gallery\" onScroll={this.props.onScrollEnd ? this.handleScroll : undefined}>\n                \n                {this.props.children || <div className=\"empty\"><p>search something ...</p></div>}\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\nimport './Photo.component.scss'\n\ninterface IState {\n}\n\ninterface IProps {\n    url: string\n    onClick?: () => void\n    onLoad?: () => void\n    alt: string\n    id?: string\n    title: string\n}\n\nexport class Photo extends React.Component<IProps, IState> {\n\n    public render(): JSX.Element {\n        return (\n\n            <div className={\"card\"} onClick={() => { this.props.onClick && this.props.onClick() }}>\n\n                <div className={\"img-container\"}>\n                    <img\n                        crossOrigin=\"anonymous\"\n                        id={this.props.id}\n                        src={this.props.url}\n                        alt={this.props.alt}\n                        onLoad={() => {\n                            this.props.onLoad && this.props.onLoad()\n                        }}\n                    >\n                    </img>\n                </div>\n\n\n                <div className=\"title\">{this.props.title}</div>\n            </div>\n\n        )\n    }\n}\n","import * as React from 'react'\nimport './FlickrPhoto.component.scss'\nimport { Photo } from '../Photo/Photo.component'\n\ninterface IState {\n}\n\ninterface IProps {\n    farm: number,\n    server: string,\n    id: string,\n    secret: string,\n    title: string\n    onClick?: () => void\n    onLoad?: () => void\n    divId?: string\n}\n\nexport class FlickrPhoto extends React.Component<IProps, IState> {\n\n    public render(): JSX.Element {\n        return (\n            <Photo\n                url={\n                    \"https://farm\" +\n                    this.props.farm +\n                    \".staticflickr.com/\" +\n                    this.props.server +\n                    \"/\" +\n                    this.props.id +\n                    \"_\" +\n                    this.props.secret +\n                    \".jpg\"\n                }\n                onClick={this.props.onClick}\n                alt={this.props.title}\n                {...this.props}\n                id={this.props.divId ? this.props.divId : this.props.id}\n            />\n        )\n    }\n}\n","import * as React from 'react'\nimport './Loader.component.scss'\nimport Loader from 'react-loader-spinner'\n\ninterface IState {\n}\n\ninterface IProps {\n\n}\n\nexport class MyLoader extends React.Component<IProps, IState> {\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"loader\">\n              <Loader\n                    type=\"Puff\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                />\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\nimport './FlickrSearch.component.scss'\nimport { SearchBox } from '../SearchBox/SearchBox.component'\nimport { PhotoGallery } from '../PhotoGallery/PhotoGallery.component'\nimport { FlickrPhoto } from '../FlickrPhoto/FlickrPhoto.component'\nimport { MyLoader } from '../Loader/Loader.component'\n\n\nexport interface FlickrPhotoInfo {\n    id: string,\n    owner: string,\n    secret: string,\n    server: string,\n    farm: number,\n    title: string,\n    ispublic: string,\n    isfriend: string,\n    isfamily: string,\n    dateupload: string,\n    ownername: string\n}\n\nexport interface FlickrSearchResponse {\n    page: number,\n    pages: number,\n    perpage: number,\n    total: string,\n    photo: FlickrPhotoInfo[]\n}\n\ninterface IState {\n    photos: FlickrPhotoInfo[]\n    isLoading: boolean\n}\n\ninterface IProps {\n    onClickPhoto: (photoInfo: FlickrPhotoInfo) => void\n    defaultSearch?: string\n}\n\nexport class FlickrSearch extends React.Component<IProps, IState> {\n\n    lastLoadedPage = 0\n    searchValue = \"\"\n\n    state: IState = {\n        photos: [],\n        isLoading: false\n    }\n\n\n    public componentDidMount() {\n        if (this.props.defaultSearch && this.props.defaultSearch !== \"\") {\n            this.handleSearchChange(this.props.defaultSearch)\n        }\n    }\n\n\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"flickr-search\">\n                <div className=\"search-container\">\n                    <SearchBox onSearch={this.handleSearchChange} />\n                </div>\n\n                <div className=\"gallery-container\">\n                    {this.state.isLoading ? <MyLoader /> : null}\n                    <PhotoGallery onScrollEnd={this.handleScrollEnd}>\n                        {\n                            this.state.photos.length > 0 && this.state.photos.map((photo) => {\n                                return <FlickrPhoto key={photo.id} {...photo} onClick={this.handleClickPhoto(photo)}></FlickrPhoto>\n                            })\n\n                        }\n                    </PhotoGallery>\n                </div>\n\n\n\n            </div>\n        )\n    }\n\n    private handleClickPhoto = (photoInfo: FlickrPhotoInfo) => {\n        return () => {\n            this.props.onClickPhoto(photoInfo)\n        }\n    }\n\n\n    private handleSearchChange = async (searchValue: string) => {\n        if (this.searchValue === searchValue) {\n            return\n        }\n        this.searchValue = searchValue\n        this.lastLoadedPage = 0\n\n        if (this.searchValue === \"\") {\n            this.setState({ photos: [] })\n        }\n        else {\n            console.log(this.searchValue === \"\", this.searchValue)\n            this.setState({ isLoading: true })\n            this.getNextPage()\n        }\n    }\n\n\n    private handleScrollEnd = async () => {\n        if (this.searchValue !== \"\") {\n            this.getNextPage()\n        }\n    }\n\n    private async getNextPage(): Promise<void> {\n        let searchResult = await this.getPhotos(this.searchValue, this.lastLoadedPage + 1)\n\n        let newPhotos = searchResult.photo\n        if (this.lastLoadedPage > 1) {\n            newPhotos = [...this.state.photos, ...newPhotos]\n        }\n\n        this.lastLoadedPage = searchResult.page\n\n        this.setState({\n            photos: newPhotos,\n            isLoading: false\n        })\n    }\n\n    private async getPhotos(search: string, page: number = 0): Promise<FlickrSearchResponse> {\n\n        const params = [\n            \"method=flickr.photos.search\",\n            \"api_key=ef1f9d4f8ca80dada31c684364355282\",\n            \"FLickrApi_sig=d7f57fa9e01a6a2d6ccd8597b8d2f86b\",\n            \"nojsoncallback=1\",\n            \"format=json\",\n            \"tags=\" + search,\n            \"page=\" + page,\n            \"per_page=15\",\n            \"content_type=7\"\n        ]\n\n        const response = await fetch(\"https://api.flickr.com/services/rest?\" + params.join(\"&\"))\n        const asJson = await response.json()\n\n        return asJson.photos\n    }\n}\n","import * as React from 'react'\nimport './FullScreenContent.component.scss'\nimport IconButton from '@material-ui/core/IconButton/IconButton'\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface IState {\n}\n\ninterface IProps {\n    onClose: () => void\n}\n\nexport class FullScreenContent extends React.Component<IProps, IState> {\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"full-screen-content\">\n                <div className=\"close\" onClick={() => { this.props.onClose() }}>\n                    <IconButton aria-label=\"close\">\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\nimport './OpenCVEffect.component.scss'\nimport { FlickrPhoto } from '../FlickrPhoto/FlickrPhoto.component';\nimport { FlickrPhotoInfo } from '../FlickrSearch/FlickrSearch.component';\n\ninterface IState {\n}\n\ninterface IProps {\n    photo: FlickrPhotoInfo\n}\n\nexport class OpenCVEffect extends React.Component<IProps, IState> {\n\n    private applyTransform = () => {\n\n        console.log(\"apply effect\")\n        const cv = (window as any).cv\n        let src = cv.imread('full-screen-image');\n        let dst = new cv.Mat();\n\n        cv.cvtColor(src, src, cv.COLOR_RGB2GRAY, 0);\n        cv.Canny(src, dst, 50, 100, 3, false);\n        cv.imshow('canvasOutput', dst);\n        src.delete();\n        dst.delete();\n    }\n\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"open-cv-effect\">\n                <FlickrPhoto\n                    {...this.props.photo}\n                    onLoad={this.applyTransform}\n                    divId={\"full-screen-image\"}\n                >\n                </FlickrPhoto>\n                <canvas id=\"canvasOutput\"></canvas>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.scss';\nimport { FlickrSearch, FlickrPhotoInfo } from './lib/FlickrSearch/FlickrSearch.component';\nimport { FullScreenContent } from './lib/FullScreenContent/FullScreenContent.component';\nimport { OpenCVEffect } from './lib/OpenCVEffect/OpenCVEffect.component';\n\n\ninterface IState {\n  fullScreenPhoto: FlickrPhotoInfo | undefined\n}\n\ninterface IProps {\n\n}\n\nexport class App extends React.Component<IProps, IState> {\n\n  state: IState = {\n    fullScreenPhoto: undefined\n  }\n\n\n  private onClickPhoto = (image: FlickrPhotoInfo) => {\n    this.setState({ fullScreenPhoto: image })\n  }\n\n  private onClose = () => {\n    this.setState({ fullScreenPhoto: undefined })\n  }\n\n  public render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <FlickrSearch onClickPhoto={this.onClickPhoto}></FlickrSearch>\n        {\n          this.state.fullScreenPhoto !== undefined &&\n          <FullScreenContent onClose={this.onClose}>\n            <OpenCVEffect photo={this.state.fullScreenPhoto}></OpenCVEffect>\n          </FullScreenContent>\n        }\n      </React.Fragment>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}